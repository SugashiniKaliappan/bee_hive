name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo
        ports:
          - 5000:5000

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Start Docker Service
        run: |
          sudo systemctl start docker
          sudo chmod 666 /var/run/docker.sock
          docker info

      - name: Wait for MongoDB to Start
        run: sleep 10  # âœ… Ensures MongoDB has enough time to start

      - name: Free Up Port 5000 (If Used)
        run: |
          sudo fuser -k 5000/tcp || true

      - name: Free Up Port 5003 (If Used)
        run: |
          sudo fuser -k 5003/tcp || true

      - name: Install dependencies
        run: |
          cd user_authentication
          npm ci

      - name: Install dependencies for `modules/lab_results`
        run: |
          cd modules/lab_results
          npm ci

      - name: Install dependencies for `modules/ward_report`
        run: |
          cd modules/ward_report
          npm ci

     
      - name: Generate Prisma Client
        run: |
          cd user_authentication
          npx prisma generate

      - name: Run Tests
        run: |
          cd user_authentication
          npx mocha --timeout 15000 test/**/*.test.js  # âœ… Fix Mocha CLI syntax

      - name: Generate Version Tag
        run: echo "VERSION_TAG=$(date +'%Y%m%d')-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker Images for Each Module with Versioning
        run: |
        MODULES=("user_authentication" "modules/patient_enrolment" "modules/ward_report" "modules/lab_results")
        TAGS=("user_auth" "patient_enrolment" "ward_report" "lab_results")
        for i in "${!MODULES[@]}"; do
        MODULE_PATH=${MODULES[$i]}
        IMAGE_TAG=${TAGS[$i]}
        
        echo "ðŸ”¨ Building $IMAGE_TAG from $MODULE_PATH"
        docker build -t sugashinikaliappan/$IMAGE_TAG:latest $MODULE_PATH
        docker tag sugashinikaliappan/$IMAGE_TAG:latest sugashinikaliappan/$IMAGE_TAG:${{ env.VERSION_TAG }}
        done


      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Images to Docker Hub
        run: |
          docker push sugashinikaliappan/bee_hive:latest
          docker push sugashinikaliappan/bee_hive:${{ env.VERSION_TAG }}

