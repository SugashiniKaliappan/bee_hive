name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo
        ports:
          - 5000:5000

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install MongoDB Shell (`mongosh`)
        run: |
          wget -qO - https://pgp.mongodb.com/server-6.0.asc | sudo tee /etc/apt/trusted.gpg.d/mongodb-server-6.0.asc
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh

      - name: Set Environment Variables
        run: |
          echo "DATABASE_URL=mongodb+srv://devopsbhwuser:devopsbhwuser@cluster0.aj515.mongodb.net/HospitalStaffDetails?retryWrites=true&w=majority&appName=Cluster00" >> $GITHUB_ENV
          echo "JWT_SECRET=myabcd123" >> $GITHUB_ENV
          echo "PORT=5000" >> $GITHUB_ENV

      - name: Wait for MongoDB to Start
        run: sleep 10 # Allow MongoDB time to initialize

      - name: Initialize MongoDB Replica Set
        run: |
          mongosh --host localhost:5000 --eval "
            rs.initiate({
              _id: 'rs0',
              members: [{ _id: 0, host: 'localhost:5000' }]
            })
          "

      - name: Install dependencies
        run: |
          cd user_authentication
          npm ci

      - name: Generate Prisma Client
        run: |
          cd user_authentication
          npx prisma generate

      - name: Run Tests
        run: |
          cd user_authentication
          npm test

      - name: Build Docker image
        run: docker build -t bee_hive .
